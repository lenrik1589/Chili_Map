plugins {
	id 'io.github.juuxel.loom-quiltflower-mini' version '1.2.1'
	id "org.quiltmc.quilt-mappings-on-loom" version "3.1.2"
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id 'org.ajoberstar.grgit' version '4.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.6.10'
}

version = project.mod_version
group = project.maven_group

quiltflower {
	addToRuntimeClasspath.set(true)
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenLocal()
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
//		maven { url "https://jitpack.io" }
	}
//	flatDir {
//		dirs {
//			uri {
//				"https://masa.dy.fi/tmp/minecraft/mods/misc_test_versions/"
//			}
//		}
//	}
	mavenCentral()
}

task preBuild {
	exec {
		commandLine './buildGitSubmodules.sh'
	}
}

tasks.build.dependsOn(tasks.preBuild)
dependencies {
	// To change the versions see the gradle.properties file
	implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.quilt_mappings}:v2"))
	})
//	modRuntimeOnlyMapped("carpet:fabric-carpet") {
//		version {
//			branch = 'master'
//		}
//	}
	modImplementation("fi.dy.masa.malilib:malilib-fabric-1.18.0:+") {
		version {
			branch = 'fabric_1.18.x'
		}
	}
//	modImplementation("")
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-screen-api-v1:+"
	implementation(include("org.jetbrains.kotlin:kotlin-stdlib"))
//	ant {
//		get(src: "https://masa.dy.fi/tmp/minecraft/mods/misc_test_versions/", dest: "", username: 'anonymous', password: 'anonymous')
//	}
//	modImplementationMapped files("https://github.com/gnembon/fabric-carpet/releases/download/1.4.50/fabric-carpet-1.17.1-1.4.50+v211021.jar")
//	modImplementationMapped "maven.modrinth:modmenu:3.0.1"


	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand project.properties
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
		jvmTarget = "17"
	}
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = "17"
	}
}
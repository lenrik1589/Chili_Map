plugins {
	id 'org.ajoberstar.grgit' version '4.1.0'
	id "maven-publish"
	alias(libs.plugins.mappings)
	alias(libs.plugins.quilt.loom)
	alias(libs.plugins.kotlin.jvm)
}

version = project.mod_version
group = project.maven_group

quiltflower {
	addToRuntimeClasspath.set(true)
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenLocal()
	mavenCentral()
}

task preBuild {
	exec {
		commandLine './buildGitSubmodules.sh'
	}
}

tasks.build.dependsOn(tasks.preBuild)
dependencies {
	minecraft libs.minecraft
	mappings loom.layered {
		addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2")
		// officialMojangMappings() // Uncomment if you want to use Mojang mappings as your primary mappings, falling back on QM for parameters and Javadocs
	}
	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api
	modImplementation libs.kotlin
//	// To change the versions see the gradle.properties file
//	implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
//	ant {
//		get(src: "https://masa.dy.fi/tmp/minecraft/mods/misc_test_versions/", dest: "", username: 'anonymous', password: 'anonymous')
//	}
//	modImplementationMapped files("https://github.com/gnembon/fabric-carpet/releases/download/1.4.50/fabric-carpet-1.17.1-1.4.50+v211021.jar")
//	modImplementationMapped "maven.modrinth:modmenu:3.0.1"


	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand project.properties
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
		jvmTarget = "17"
	}
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = "17"
	}
}